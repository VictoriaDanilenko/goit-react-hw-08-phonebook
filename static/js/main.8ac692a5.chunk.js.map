{"version":3,"sources":["components/Phonebook/Phonebook.styles.js","redux/operations/contacts-operations.js","redux/selectors/contacts-selectors.js","components/Phonebook/Phonebook.js","components/Contacts/Contacts.styles.js","components/Contacts/Contacts.js","components/Filter/Filter.styles.js","components/Filter/Filter.js","components/Container/Container.styled.js","components/Container/Container.js","components/Registration/Registration.styled.js","redux/auth/auth-selectors.js","redux/auth/auth-operations.js","components/Registration/Registration.js","components/Login/Login.styled.js","components/Login/Login.js","components/AppBar/Navigation.styled.js","components/AppBar/Navigation.js","components/AppBar/AuthNav.js","components/AppBar/UserMenu.styled.js","components/AppBar/UserMenu.js","components/AppBar/AppBar.js","components/Home/Home.styled.js","components/Home/Home.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/reducers/contacts-reducers.js","redux/auth/auth-slice.js","redux/store/store.js","index.js"],"names":["Wrapper","styled","div","InputWrapper","h2","p","button","Input","input","getContacts","a","axios","get","contacts","data","defaults","baseURL","fetchContacts","createAsyncThunk","addContact","newContact","post","deleteContact","id","delete","contactsItems","state","items","filterItems","filter","visibleContacts","normalizedFilter","toLowerCase","contact","name","includes","Phonebook","dispatch","useDispatch","useSelector","useState","setName","number","setNumber","useEffect","contactsOperations","handleChange","e","target","value","eraseInputs","onSubmit","preventDefault","randomId","uuidv4","find","alert","toast","success","type","title","required","onChange","placeholder","pattern","Button","variant","color","List","ul","Item","li","Contacts","map","onClick","removeContact","cursor","size","Filter","contactsActions","autoComplete","Container","children","className","getIsLoggedIn","auth","isLoggedIn","getUsername","user","getIsFetchingCurrentUser","isFetchingCurrentUser","token","headers","common","Authorization","register","credentials","thunkAPI","rejectWithValue","message","logIn","logOut","_","fetchCurrentUser","getState","persistedToken","Registration","email","setEmail","password","setPassword","authOperation","Login","StyledNavLink","NavLink","NavWrapper","nav","Navigation","exact","to","activeClassName","AuthNav","InputName","UserMenu","round","src","fontSize","style","AppBarr","AppBar","position","Home","PrivateRoute","redirectTo","routeProps","PublicRoute","restricted","shouldRedirect","App","refreshingCurrentUser","fallback","path","length","createReducer","fulfilled","action","payload","isLoading","pending","rejected","error","changeFilter","actions","combineReducers","initialState","authSlice","createSlice","extraReducers","authOperations","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contactsReducer","persistReducer","authReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.8ac692a5.chunk.js","sourcesContent":["import styled from '@emotion/styled'\n\nexport const Wrapper = styled.div`\n  padding: 20px;\n  text-align: center;\n`\nexport const Header = styled.h2`\n  color: #000000;\n`\nexport const InputName = styled.p`\n  color: #000000;\n  margin: 0;\n`\nexport const SubmitButton = styled.button`\n  background-color: #9db17c;\n  color: white;\n  margin-top: 20px;\n  cursor: pointer;\n`\n\nexport const InputWrapper = styled.div`\n  .wrapper {\n    background-color: #fff;\n    border-radius: 2px;\n    box-shadow: 0px 2px 1px 0px #ddd;\n    box-sizing: border-box;\n    height: 300px;\n    left: 50%;\n    margin: -150px 0 0 -150px;\n    position: absolute;\n    top: 50%;\n    width: 300px;\n  }\n`\nexport const Input = styled.input`\n  background-color: transparent;\n  border: none;\n  border-bottom: 1px solid #777777;\n  color: #000000;\n  box-sizing: border-box;\n  font-size: 18px;\n  padding: 5px 0px;\n  width: 200px;\n  margin-bottom: 15px;\n  &:focus {\n    outline: none;\n  }\n`\n","import axios from 'axios'\nimport { createAsyncThunk } from '@reduxjs/toolkit'\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com'\n\nasync function getContacts() {\n  const contacts = await axios.get(`/contacts`)\n  return contacts.data\n}\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async () => {\n    const contacts = await getContacts()\n    return contacts\n  },\n)\n\nexport const addContact = createAsyncThunk(\n  'contacts/addContact',\n  async (newContact) => {\n    await axios.post(`/contacts`, newContact)\n    return await getContacts()\n  },\n)\n\nexport const deleteContact = createAsyncThunk(\n  'contacts/deleteContact',\n  async (id) => {\n    await axios.delete(`/contacts/${id}`)\n    return await getContacts()\n  },\n)","export const contactsItems = (state) => state.contacts.items\nexport const filterItems = (state) => state.contacts.filter\n\nexport const visibleContacts = (state) => {\n  const contacts = contactsItems(state)\n  const filter = filterItems(state)\n\n  const normalizedFilter = filter.toLowerCase()\n  return contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Wrapper, Input, InputWrapper } from './Phonebook.styles'\nimport PropTypes from 'prop-types'\nimport { v4 as uuidv4 } from 'uuid'\nimport { useDispatch, useSelector } from 'react-redux'\nimport * as contactsOperations from '../../redux/operations/contacts-operations'\nimport { contactsItems } from '../../redux/selectors/contacts-selectors'\nimport Button from '@material-ui/core/Button'\nimport toast from 'react-hot-toast'\n\nfunction Phonebook() {\n  const dispatch = useDispatch()\n  const contacts = useSelector(contactsItems)\n\n  const [name, setName] = useState('')\n  const [number, setNumber] = useState('')\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts())\n  }, [dispatch])\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    switch (name) {\n      case 'name':\n        setName(value)\n        break\n      case 'number':\n        setNumber(value)\n        break\n\n      default:\n        break\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const randomId = uuidv4()\n    if (\n      contacts.find(\n        (contact) => contact.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      return alert(`${name} already exists in your contacts`)\n    }\n    dispatch(contactsOperations.addContact({ id: randomId, name, number }))\n    toast.success(`${name} successfully added`)\n    eraseInputs()\n  }\n\n  const eraseInputs = () => {\n    setName('')\n    setNumber('')\n  }\n\n  return (\n    <Wrapper>\n      <form onSubmit={handleSubmit}>\n        <InputWrapper>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={handleChange}\n            value={name}\n            placeholder=\"Name *\"\n          />\n        </InputWrapper>\n\n        <InputWrapper>\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={handleChange}\n            value={number}\n            placeholder=\"Phone number *\"\n          />\n        </InputWrapper>\n        <Button variant=\"outlined\" color=\"primary\" type=\"submit\">\n          Add contact\n        </Button>\n      </form>\n    </Wrapper>\n  )\n}\n\nPhonebook.propTypes = {\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  onSubmit: PropTypes.func,\n  number: PropTypes.node,\n}\n\nexport default Phonebook","import styled from '@emotion/styled'\n\nexport const Wrapper = styled.div`\n  text-align: center;\n`\nexport const List = styled.ul`\n  margin: 0;\n  padding: 0;\n  color: #4b3b40;\n`\nexport const Item = styled.li`\n  display: flex;\n  list-style: none;\n  justify-content: center;\n  align-items: center;\n`","import React from 'react'\nimport { Wrapper, List, Item } from './Contacts.styles'\nimport PropTypes from 'prop-types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { visibleContacts } from '../../redux/selectors/contacts-selectors'\nimport * as contactsOperations from '../../redux/operations/contacts-operations'\nimport Delete from '@material-ui/icons/Delete'\nimport toast from 'react-hot-toast'\n\nfunction Contacts() {\n  const dispatch = useDispatch()\n  const contacts = useSelector(visibleContacts)\n\n  const removeContact = (id) => {\n    dispatch(contactsOperations.deleteContact(id))\n    toast.success(`Contact deleted`)\n  }\n\n  return (\n    <Wrapper>\n      <List>\n        {contacts.map(({ id, name, number }) => (\n          <Item key={id}>\n            {name}: {number}\n            <Delete\n              color=\"primary\"\n              onClick={() => removeContact(id)}\n              cursor=\"pointer\"\n              size=\"large\"\n            ></Delete>\n          </Item>\n        ))}\n      </List>\n    </Wrapper>\n  )\n}\n\nContacts.propTypes = {\n  id: PropTypes.node,\n  name: PropTypes.string,\n  number: PropTypes.number,\n}\n\nexport default Contacts","import styled from '@emotion/styled'\n\nexport const Wrapper = styled.div`\n  text-align: center;\n  padding: 20px;\n`\n\nexport const Input = styled.input`\n  background-color: transparent;\n  border: none;\n  border-bottom: 1px solid #777777;\n  color: #555;\n  box-sizing: border-box;\n  font-size: 18px;\n  padding: 5px 0px;\n  width: 200px;\n  margin-bottom: 15px;\n  &:focus {\n    outline: none;\n  }\n`","import React from 'react'\nimport { Wrapper, Input } from './Filter.styles'\nimport PropTypes from 'prop-types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport * as contactsActions from '../../redux/actions/contacts-actions'\nimport { filterItems } from '../../redux/selectors/contacts-selectors'\n\nfunction Filter() {\n  const dispatch = useDispatch()\n  const filter = useSelector(filterItems)\n\n  const handleChange = (e) => {\n    dispatch(contactsActions.changeFilter(e.target.value))\n  }\n\n  return (\n    <Wrapper>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        onChange={handleChange}\n        value={filter}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        autoComplete=\"off\"\n        placeholder=\"Find contacts by name\"\n      />\n    </Wrapper>\n  )\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onChange: PropTypes.func,\n}\n\nexport default Filter","import styled from '@emotion/styled'\n\nexport const Wrapper = styled.div`\n  margin: auto;\n  max-width: 1280px;\n`","import React from 'react'\nimport { Wrapper } from './Container.styled'\nimport PropTypes from 'prop-types'\n\nfunction Container({ children }) {\n  return (\n    <>\n      <div className=\"background\">\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n      </div>\n      <Wrapper>{children}</Wrapper>\n    </>\n  )\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Container","import styled from '@emotion/styled'\n\nexport const Wrapper = styled.div`\n  text-align: center;\n  padding: 20px;\n`\nexport const Header = styled.h2`\n  color: #4b3b40;\n`\nexport const InputName = styled.p`\n  color: #82735c;\n  margin: 0;\n`\n\nexport const InputWrapper = styled.div`\n  .wrapper {\n    background-color: #fff;\n    border-radius: 2px;\n    box-shadow: 0px 2px 1px 0px #ddd;\n    box-sizing: border-box;\n    height: 300px;\n    left: 50%;\n    margin: -150px 0 0 -150px;\n    position: absolute;\n    top: 50%;\n    width: 300px;\n  }\n`\nexport const Input = styled.input`\n  background-color: transparent;\n  border: none;\n  border-bottom: 1px solid #777777;\n  color: #555;\n  box-sizing: border-box;\n  font-size: 18px;\n  padding: 5px 0px;\n  width: 200px;\n  margin-bottom: 15px;\n  &:focus {\n    outline: none;\n  }\n`","export const getIsLoggedIn = (state) => state.auth.isLoggedIn\nexport const getUsername = (state) => state.auth.user.name\nexport const getUserEmail = (state) => state.auth.user.email\nexport const getUserToken = (state) => state.auth.user.token\nexport const getIsFetchingCurrentUser = (state) =>\n  state.auth.isFetchingCurrentUser","import axios from 'axios'\nimport { createAsyncThunk } from '@reduxjs/toolkit'\nimport toast from 'react-hot-toast'\nimport { useSelector } from 'react-redux'\nimport { getUsername } from './auth-selectors'\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com'\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = ''\n  },\n}\n\nexport const register = createAsyncThunk(\n  'auth/register',\n  async (credentials, thunkAPI) => {\n    try {\n      const { data } = await axios.post('/users/signup', credentials)\n      token.set(data.token)\n      return data\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message)\n    }\n  },\n)\n\nexport const logIn = createAsyncThunk(\n  'auth/login',\n  async (credentials, thunkAPI) => {\n    try {\n      const { data } = await axios.post('/users/login', credentials)\n      token.set(data.token)\n      return data\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message)\n    }\n  },\n)\n\nexport const logOut = createAsyncThunk('auth/logout', async (_, thunkAPI) => {\n  try {\n    await axios.post('/users/logout')\n    token.unset()\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message)\n  }\n})\n\nexport const fetchCurrentUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState()\n    const persistedToken = state.auth.token\n    const name = useSelector(getUsername)\n\n    if (persistedToken === null) {\n      return thunkAPI.rejectWithValue()\n    }\n    token.set(persistedToken)\n\n    try {\n      const { data } = await axios.get('/users/current')\n      toast(`Welcome back, ${name}`)\n      return data\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message)\n    }\n  },\n)","import React, { useState } from 'react'\nimport { Input, InputWrapper, Wrapper } from './Registration.styled'\nimport { useDispatch } from 'react-redux'\nimport * as authOperation from '../../redux/auth/auth-operations'\nimport Button from '@material-ui/core/Button'\n\nfunction Registration() {\n  const dispatch = useDispatch()\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    switch (name) {\n      case 'name':\n        setName(value)\n        break\n      case 'email':\n        setEmail(value)\n        break\n      case 'password':\n        setPassword(value)\n        break\n      default:\n        break\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    dispatch(authOperation.register({ name, email, password }))\n    eraseInputs()\n  }\n\n  const eraseInputs = () => {\n    setName('')\n    setEmail('')\n    setPassword('')\n  }\n\n  return (\n    <Wrapper>\n      <form onSubmit={handleSubmit}>\n        <InputWrapper>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            required\n            onChange={handleChange}\n            value={name}\n            placeholder=\"Name *\"\n          />\n        </InputWrapper>\n\n        <InputWrapper>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            required\n            onChange={handleChange}\n            value={email}\n            placeholder=\"Email *\"\n          />\n        </InputWrapper>\n\n        <InputWrapper>\n          <Input\n            type=\"password\"\n            name=\"password\"\n            required\n            onChange={handleChange}\n            value={password}\n            placeholder=\"Password *\"\n          />\n        </InputWrapper>\n\n        <Button variant=\"outlined\" color=\"primary\" type=\"submit\">\n          Register\n        </Button>\n      </form>\n    </Wrapper>\n  )\n}\n\nexport default Registration","import styled from '@emotion/styled'\n\nexport const Wrapper = styled.div`\n  text-align: center;\n  padding: 20px;\n`\n\nexport const SubmitButton = styled.button`\n  background-color: #9db17c;\n  color: white;\n  margin-top: 20px;\n  cursor: pointer;\n`\nexport const InputWrapper = styled.div`\n  .wrapper {\n    background-color: #fff;\n    border-radius: 2px;\n    box-shadow: 0px 2px 1px 0px #ddd;\n    box-sizing: border-box;\n    height: 300px;\n    left: 50%;\n    margin: -150px 0 0 -150px;\n    position: absolute;\n    top: 50%;\n    width: 300px;\n  }\n`\nexport const Input = styled.input`\n  background-color: transparent;\n  border: none;\n  border-bottom: 1px solid #777777;\n  color: #555;\n  box-sizing: border-box;\n  font-size: 18px;\n  padding: 5px 0px;\n  width: 200px;\n  margin-bottom: 15px;\n  &:focus {\n    outline: none;\n  }\n`","import React, { useState } from 'react'\nimport { InputWrapper, Input, Wrapper } from './Login.styled'\nimport { useDispatch } from 'react-redux'\nimport * as authOperation from '../../redux/auth/auth-operations'\nimport Button from '@material-ui/core/Button'\n\nfunction Login() {\n  const dispatch = useDispatch()\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    switch (name) {\n      case 'email':\n        setEmail(value)\n        break\n      case 'password':\n        setPassword(value)\n        break\n      default:\n        break\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    dispatch(authOperation.logIn({ email, password }))\n    eraseInputs()\n  }\n\n  const eraseInputs = () => {\n    setEmail('')\n    setPassword('')\n  }\n  return (\n    <Wrapper>\n      <form onSubmit={handleSubmit}>\n        <InputWrapper>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            required\n            onChange={handleChange}\n            value={email}\n            placeholder=\"Email *\"\n          />\n        </InputWrapper>\n        <InputWrapper>\n          <Input\n            type=\"password\"\n            name=\"password\"\n            required\n            onChange={handleChange}\n            value={password}\n            placeholder=\"Password *\"\n          />\n        </InputWrapper>\n\n        <Button variant=\"outlined\" color=\"primary\" type=\"submit\">\n          Log in\n        </Button>\n      </form>\n    </Wrapper>\n  )\n}\n\nexport default Login","import styled from '@emotion/styled'\nimport { NavLink } from 'react-router-dom'\n\nexport const StyledNavLink = styled(NavLink)`\n  &.link {\n    text-decoration: none;\n    color: white;\n    margin-right: 10px;\n    text-align: center;\n    margin-left: 20px;\n  }\n  &.activeLink {\n    font-size: 20px;\n  }\n`\nexport const StyledNav = styled.nav`\n  /* text-align: center; */\n  padding: 10px;\n  border-bottom: solid 1px black;\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n`\n\nexport const NavWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n`","import React from 'react'\nimport { StyledNavLink, Wrapper } from './Navigation.styled'\nimport { useSelector } from 'react-redux'\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors'\n\nfunction Navigation() {\n  const isLoggedIn = useSelector(getIsLoggedIn)\n  return (\n    <>\n      <Wrapper>\n        {!isLoggedIn && (\n          <StyledNavLink\n            exact\n            to=\"/\"\n            className=\"link\"\n            activeClassName=\"activeLink\"\n          >\n            Home\n          </StyledNavLink>\n        )}\n\n        {isLoggedIn && (\n          <StyledNavLink\n            to=\"/contacts\"\n            className=\"link\"\n            activeClassName=\"activeLink\"\n          >\n            Contacts\n          </StyledNavLink>\n        )}\n      </Wrapper>\n    </>\n  )\n}\n\nexport default Navigation","import React from 'react'\nimport { StyledNavLink, Wrapper } from './Navigation.styled'\n\nfunction AuthNav() {\n  return (\n    <Wrapper>\n      <StyledNavLink to=\"/login\" className=\"link\" activeClassName=\"activeLink\">\n        Login\n      </StyledNavLink>\n      <StyledNavLink\n        to=\"/register\"\n        className=\"link\"\n        activeClassName=\"activeLink\"\n      >\n        Register\n      </StyledNavLink>\n    </Wrapper>\n  )\n}\n\nexport default AuthNav\n","import styled from '@emotion/styled'\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-right: 20px;\n`\nexport const InputName = styled.p`\n  margin: 0;\n  margin-right: 5px;\n`","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getUsername } from '../../redux/auth/auth-selectors'\nimport { Wrapper, InputName } from './UserMenu.styled'\nimport Avatar from 'react-avatar'\nimport { logOut } from '../../redux/auth/auth-operations.js'\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom'\n\nfunction UserMenu() {\n  const dispatch = useDispatch()\n  const name = useSelector(getUsername)\n\n  return (\n    <Wrapper>\n      <InputName>Welcome, {name}!</InputName>\n      <Avatar round size=\"40\" src=\"https://picsum.photos/200/300\" />\n      <MeetingRoomIcon\n        cursor=\"pointer\"\n        fontSize=\"medium\"\n        style={{ color: 'white' }}\n        onClick={() => dispatch(logOut())}\n      >\n        Logout\n      </MeetingRoomIcon>\n    </Wrapper>\n  )\n}\n\nexport default UserMenu","import React from 'react'\nimport Navigation from './Navigation'\nimport AuthNav from './AuthNav'\nimport UserMenu from './UserMenu'\nimport { NavWrapper } from './Navigation.styled'\nimport { useSelector } from 'react-redux'\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors'\nimport AppBar from '@material-ui/core/AppBar'\n\nfunction AppBarr() {\n  const isLoggedIn = useSelector(getIsLoggedIn)\n  return (\n    <AppBar position=\"sticky\" className=\"Appbar\">\n      <NavWrapper>\n        <Navigation />\n        {isLoggedIn ? <UserMenu /> : <AuthNav />}\n      </NavWrapper>\n    </AppBar>\n  )\n}\n\nexport default AppBarr\n","import styled from '@emotion/styled'\n\nexport const Wrapper = styled.div`\n  text-align: center;\n  max-width: 640px;\n  margin: 20px auto;\n`","import React from 'react'\nimport { Wrapper } from './Home.styled'\n\nfunction Home() {\n  return (\n    <Wrapper>\n      Welcome to Phonebook Application! \n      \n    </Wrapper>\n  )\n}\n\nexport default Home","import { useSelector } from 'react-redux'\nimport { Route, Redirect } from 'react-router-dom'\nimport { getIsLoggedIn } from '../redux/auth/auth-selectors'\n\nfunction PrivateRoute({ children, redirectTo = '/', ...routeProps }) {\n  const isLoggedIn = useSelector(getIsLoggedIn)\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  )\n}\n\nexport default PrivateRoute","import { useSelector } from 'react-redux'\nimport { Route, Redirect } from 'react-router-dom'\nimport { getIsLoggedIn } from '../redux/auth/auth-selectors'\n\nfunction PublicRoute({\n  children,\n  restricted = false,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(getIsLoggedIn)\n  const shouldRedirect = isLoggedIn && restricted\n\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\n    </Route>\n  )\n}\n\nexport default PublicRoute\n","import React, { Suspense, useEffect } from 'react'\nimport { Switch } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Phonebook from './components/Phonebook/Phonebook'\nimport Contacts from './components/Contacts/Contacts'\nimport Filter from './components/Filter/Filter'\nimport Container from './components/Container/Container'\nimport Registration from './components/Registration/Registration'\nimport Login from './components/Login/Login'\nimport AppBarr from './components/AppBar/AppBar'\nimport Home from './components/Home/Home'\nimport { contactsItems } from './redux/selectors/contacts-selectors'\nimport { fetchCurrentUser } from './redux/auth/auth-operations'\nimport { getIsFetchingCurrentUser } from './redux/auth/auth-selectors'\nimport { Toaster } from 'react-hot-toast'\n\nimport PrivateRoute from './components/PrivateRoute'\nimport PublicRoute from './components/PublicRoute'\n\nfunction App() {\n  const contacts = useSelector(contactsItems)\n  const dispatch = useDispatch()\n  const refreshingCurrentUser = useSelector(getIsFetchingCurrentUser)\n\n  useEffect(() => {\n    dispatch(fetchCurrentUser())\n  }, [dispatch])\n\n  return (\n    <Container>\n      {!refreshingCurrentUser && (\n        <>\n          <Toaster />\n          <AppBarr />\n          <Suspense fallback={<div>Loading...</div>}>\n            <Switch>\n              <PublicRoute exact path=\"/\">\n                <Home />\n              </PublicRoute>\n\n              <PublicRoute path=\"/register\" restricted>\n                <Registration />\n              </PublicRoute>\n\n              <PublicRoute path=\"/login\" redirectTo=\"/contacts\" restricted>\n                <Login />\n              </PublicRoute>\n\n              <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n                <Phonebook />\n                {contacts.length > 0 && (\n                  <>\n                    {contacts.length > 1 && <Filter />}\n                    <Contacts />\n                  </>\n                )}\n              </PrivateRoute>\n            </Switch>\n          </Suspense>\n        </>\n      )}\n    </Container>\n  )\n}\n\nexport default App","import { createReducer } from '@reduxjs/toolkit'\nimport { combineReducers } from 'redux'\nimport { changeFilter } from '../actions/contacts-actions'\nimport {\n  fetchContacts,\n  addContact,\n  deleteContact,\n} from '../operations/contacts-operations'\n\nconst items = createReducer([], {\n  [fetchContacts.fulfilled]: (_, action) => action.payload,\n  [addContact.fulfilled]: (_, action) => action.payload,\n  [deleteContact.fulfilled]: (_, action) => action.payload,\n})\n\nconst isLoading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n})\n\nconst error = createReducer(null, {\n  [fetchContacts.rejected]: (_, action) => action.payload,\n  [fetchContacts.fulfilled]: () => null,\n\n  [addContact.rejected]: (_, action) => action.payload,\n  [addContact.pending]: () => null,\n\n  [deleteContact.rejected]: (_, action) => action.payload,\n  [deleteContact.pending]: () => null,\n})\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, actions) => actions.payload,\n})\n\nexport default combineReducers({\n  items,\n  isLoading,\n  filter,\n  error,\n})","import { createSlice } from '@reduxjs/toolkit'\nimport * as authOperations from './auth-operations'\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isFetchingCurrentUser: false,\n}\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, action) {\n      state.user = action.payload.user\n      state.token = action.payload.token\n      state.isLoggedIn = true\n    },\n    [authOperations.logIn.fulfilled](state, action) {\n      state.user = action.payload.user\n      state.token = action.payload.token\n      state.isLoggedIn = true\n    },\n    [authOperations.logOut.fulfilled](state) {\n      state.user = initialState.user\n      state.token = initialState.token\n      state.isLoggedIn = initialState.isLoggedIn\n    },\n    [authOperations.fetchCurrentUser.pending](state) {\n      state.isFetchingCurrentUser = true\n    },\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\n      state.user = action.payload\n      state.isLoggedIn = true\n      state.isFetchingCurrentUser = false\n    },\n    [authOperations.fetchCurrentUser.rejected](state) {\n      state.isFetchingCurrentUser = false\n    },\n  },\n})\n\nexport default authSlice.reducer","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport contactsReducer from '../reducers/contacts-reducers'\nimport authReducer from '../auth/auth-slice'\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n]\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n}\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    // auth: authReducer,\n    auth: persistReducer(authPersistConfig, authReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV !== 'production',\n})\n\nexport const persistor = persistStore(store)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App.js'\nimport { store, persistor } from './redux/store/store'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)"],"sourceRoot":""}